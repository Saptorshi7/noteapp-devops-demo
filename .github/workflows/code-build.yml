name: Build and Push Docker Image to ACR

on:
  push:
    paths:
      - "app/**"      # Only trigger if files inside app/ change
    branches:
      - develop          # Only for main branch (you can change to dev/staging)
  workflow_dispatch:  # allows manual triggering

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node for React build
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      # Install dependencies and build React app
      - name: Install and build React app
        working-directory: ./app
        run: |
          npm install
          npm run build

      # Log in to Azure
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Log in to ACR
      - name: ACR Login
        run: |
          az acr login --name ${{ secrets.ACR_NAME }}

      # Build Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/noteapp:${{ github.sha }} ./app
          docker tag ${{ secrets.ACR_NAME }}.azurecr.io/noteapp:${{ github.sha }} ${{ secrets.ACR_NAME }}.azurecr.io/noteapp:latest

      # üîç Scan image with Trivy before pushing
      - name: Trivy Image Scan
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: ${{ secrets.ACR_NAME }}.azurecr.io/noteapp:${{ github.sha }}
          format: 'table'
          exit-code: '1'     # fail on vulnerabilities
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      # Push Docker image
      - name: Push Docker image
        run: |
          # docker push ${{ secrets.ACR_NAME }}.azurecr.io/noteapp:${{ github.sha }}
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/noteapp:latest
