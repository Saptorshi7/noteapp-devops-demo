trigger:
  branches:
    include:
      - develop     # Only trigger on develop branch
  paths:
    include:
      - "app/**"     # Only trigger if files inside app/ change

pr:
  branches:
    include:
      - develop     # Only for pull requests targeting the develop branch
  paths:
    include:
      - "app/**"     # Only trigger if files inside app/ change

pool:
  vmImage: 'ubuntu-latest'

variables:
  # Set your Azure Container Registry name and other variables
  ACR_NAME: $(ACR_NAME)
  IMAGE_NAME: noteapp

stages:
  - stage: BuildAndPush
    displayName: 'Build and Push Docker Image to ACR'
    jobs:
      - job: build_and_push
        displayName: 'Build and Push Docker Image'
        steps:

          # Checkout code
          - task: Checkout@2
            displayName: 'Checkout Code'

          # Set up Node.js for React build
          - task: UseNode@2
            displayName: 'Set up Node.js'
            inputs:
              version: '18'

          # Install dependencies and build React app
          - script: |
              cd app
              npm install
              npm run build
            displayName: 'Install and Build React App'

          # Log in to Azure
          - task: AzureCLI@2
            displayName: 'Azure Login'
            inputs:
              azureSubscription: $(AZURE_SUBSCRIPTION)  # Make sure this is defined in your Azure DevOps service connections
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                echo "Logged into Azure"

          # Log in to Azure Container Registry (ACR)
          - task: AzureCLI@2
            displayName: 'Login to ACR'
            inputs:
              azureSubscription: $(AZURE_SUBSCRIPTION)  # Make sure this is defined in your Azure DevOps service connections
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                az acr login --name $(ACR_NAME)

          # Build Docker image
          - script: |
              docker build -t $(ACR_NAME).azurecr.io/$(IMAGE_NAME):$(Build.BuildId) ./app
              docker tag $(ACR_NAME).azurecr.io/$(IMAGE_NAME):$(Build.BuildId) $(ACR_NAME).azurecr.io/$(IMAGE_NAME):latest
            displayName: 'Build Docker Image'

          # Scan Docker image with Trivy
          - task: Docker@2
            displayName: 'Trivy Image Scan'
            inputs:
              command: 'run'
              containerRegistry: $(ACR_NAME)
              arguments: |
                aquasecurity/trivy:latest image --exit-code 1 --severity CRITICAL,HIGH $(ACR_NAME).azurecr.io/$(IMAGE_NAME):$(Build.BuildId)
            continueOnError: true  # Fail the build if vulnerabilities are found

          # Push Docker image to ACR
          - script: |
              docker push $(ACR_NAME).azurecr.io/$(IMAGE_NAME):$(Build.BuildId)
              docker push $(ACR_NAME).azurecr.io/$(IMAGE_NAME):latest
            displayName: 'Push Docker Image to ACR'
