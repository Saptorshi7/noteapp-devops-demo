trigger:
  branches:
    include:
      - main
  paths:
    include:
      - k8s/*

pr: none  # No PR validation needed

# ✅ Allow manual trigger
resources:
  pipelines: []

stages:
- stage: Deploy
  displayName: "Deploy to AKS"
  jobs:
  - job: DeployJob
    displayName: "Deploy Kubernetes Manifests"
    pool:
      vmImage: ubuntu-latest

    steps:
      # ✅ Checkout repo
      - checkout: self

      # 🔑 Azure login using Service Connection
      - task: AzureCLI@2
        displayName: "Azure Login"
        inputs:
          azureSubscription: 'AzureDevOpsSubscription' # <-- Replace with your Azure DevOps service connection name
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            echo "Logged in to Azure CLI"

      # ⛓️ Get AKS credentials
      - task: AzureCLI@2
        displayName: "Get AKS Credentials"
        inputs:
          azureSubscription: 'AzureDevOpsSubscription'
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            az aks get-credentials \
              --resource-group $(AKS_RG) \
              --name $(AKS_NAME) \
              --overwrite-existing

      # 🔑 Create imagePullSecret for ACR
      - task: AzureCLI@2
        displayName: "Create imagePullSecret for ACR"
        inputs:
          azureSubscription: 'AzureDevOpsSubscription'
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            kubectl apply -f k8s/namespace.yaml

            # Enable ACR admin creds (if not already enabled)
            az acr update -n $(ACR_NAME) --admin-enabled true

            ACR_USERNAME=$(az acr credential show -n $(ACR_NAME) --query "username" -o tsv)
            ACR_PASSWORD=$(az acr credential show -n $(ACR_NAME) --query "passwords[0].value" -o tsv)

            kubectl create secret docker-registry acr-cred \
              --docker-server=$(ACR_NAME).azurecr.io \
              --docker-username=$ACR_USERNAME \
              --docker-password=$ACR_PASSWORD \
              --namespace=note-app \
              --dry-run=client -o yaml | kubectl apply -f -

      # 🐳 Update image tag
      - script: |
          IMAGE=$(ACR_NAME).azurecr.io/noteapp:latest
          sed -i "s|IMAGE_PLACEHOLDER|$IMAGE|g" k8s/deployment.yaml
        displayName: "Patch deployment.yaml with latest image"

      # 🚀 Deploy to AKS
      - script: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
          kubectl apply -f k8s/hpa.yaml
        displayName: "Apply Kubernetes Manifests"

      # ✅ Verify rollout
      - script: |
          kubectl rollout status deployment/note-app -n note-app
        displayName: "Verify Deployment"

      # 🌐 Get LoadBalancer IP
      - script: |
          echo "LoadBalancer IP:"
          kubectl get svc -n note-app -o jsonpath='{.items[0].status.loadBalancer.ingress[0].ip}'
        displayName: "Get Service LoadBalancer IP"