
# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- develop

pool:
  vmImage: ubuntu-latest

variables:
  resourcegroup: 'terraform-state'
  accountname: 'tfstate0911'
  containername: 'tfstate'
  key: 'noteapp.terraform.tfstate'

stages:
  - stage: tfvalidate
    jobs:
      - job: validate
        continueOnError: false
        steps:
          - task: TerraformInstaller@1
            displayName: install
            inputs:
              terraformVersion: 'latest'
          - task: TerraformTaskV4@4
            displayName: init
            inputs:
              workingDirectory: 'infra'
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'AzureDevOpsSubscription'
              backendAzureRmResourceGroupName: '$(resourcegroup)'
              backendAzureRmStorageAccountName: '$(accountname)'
              backendAzureRmContainerName: '$(containername)'
              backendAzureRmKey: '$(key)'
          - task: TerraformTaskV4@4
            displayName: validate
            inputs:
              workingDirectory: 'infra'
              provider: 'azurerm'
              command: 'validate'
  - stage: tfdeploy
    condition: succeeded('tfvalidate')
    dependsOn: tfvalidate
    jobs:
      - job: apply
        steps:
          - task: TerraformInstaller@1
            displayName: install
            inputs:
              terraformVersion: 'latest'
          - task: TerraformTaskV4@4
            displayName: init
            inputs:
              workingDirectory: 'infra'
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'AzureDevOpsSubscription'
              backendAzureRmResourceGroupName: '$(resourcegroup)'
              backendAzureRmStorageAccountName: '$(accountname)'
              backendAzureRmContainerName: '$(containername)'
              backendAzureRmKey: '$(key)'
          - task: TerraformTaskV4@4
            displayName: plan
            inputs:
              workingDirectory: 'infra'
              provider: 'azurerm'
              command: 'plan'
              environmentServiceNameAzureRM: 'AzureDevOpsSubscription'