trigger:
- develop

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: AzureLoginTerraformPlan
  displayName: 'Azure Login + Terraform Plan'
  jobs:
  - job: LoginInstallPlanJob
    displayName: 'Single Step: Login + Install + Plan'
    steps:
    - task: AzureCLI@2
      displayName: 'Azure Login + Terraform Install + Plan'
      inputs:
        azureSubscription: 'AzureDevOpsSubscription'  # Replace with your service connection name
        scriptType: bash
        addSpnToEnvironment: true
        scriptLocation: inlineScript
        inlineScript: |
          echo "‚úÖ Logging in to Azure with service connection..."
          az account show --output json > account.json
          
          # Extract ARM_* environment variables from az account show
          export ARM_SUBSCRIPTION_ID=$(jq -r .id account.json)
          export ARM_TENANT_ID=$(jq -r .tenantId account.json)
          
          # For Service Connection, clientId & secret are automatically injected
          # AzureCLI@2 already sets ARM_CLIENT_ID and ARM_CLIENT_SECRET internally
          echo "üîë Using Service Principal from service connection"
          echo "ARM_SUBSCRIPTION_ID=$ARM_SUBSCRIPTION_ID"
          echo "ARM_TENANT_ID=$ARM_TENANT_ID"

          echo "‚¨áÔ∏è Installing Terraform..."
          sudo apt-get update -y
          sudo apt-get install -y wget unzip
          TERRAFORM_VERSION="1.9.8"
          wget https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
          unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip
          sudo mv terraform /usr/local/bin/
          terraform -version

          echo "üöÄ Running Terraform Init & Plan in infra/..."
          cd $(System.DefaultWorkingDirectory)/infra
          terraform init -input=false
          terraform plan -input=false -out=tfplan
